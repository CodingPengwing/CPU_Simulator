if (time_arrived != current_time) 
        {
            while (current_time != time_arrived) 
            {
                unsigned int time_difference = time_arrived - current_time;
                long long int running_time = find_shortest_CPU_running_time(cpu_manager);

                if (running_time == -1) { break; }
                
                run_CPUs(cpu_manager, current_time, running_time);
                current_time += running_time;

                for (int i = 0; i < cpu_manager->num_CPUs; i++)
                {
                    CPU *cpu = cpu_manager->CPUs[i];
                    if (!cpu->num_processes) continue;
                    Process *top_process = cpu->head;
                    if (top_process->remaining_time == 0)
                    {
                        top_process = pop_Process_from_CPU(cpu);
                        if (!popped_list) popped_list = top_process;
                        else 
                        {
                            Process *curr = popped_list;
                            while (curr->next) curr = curr->next;
                            curr->next = top_process;
                            top_process->prev = curr;
                        }
                    }
                }
                
                if (popped_list) 
                {
                    Process *curr = popped_list;
                    unsigned int processes_remaining = get_processes_remaining(cpu_manager);
                    while (curr->next) 
                    {
                        print_Process_finished(curr, current_time, processes_remaining);
                        curr = curr->next;
                        free_Process(curr->prev);
                        curr->prev = NULL;
                    }
                    free_Process(curr);
                    curr = NULL;
                    popped_list = NULL;
                }
                
            }
        }